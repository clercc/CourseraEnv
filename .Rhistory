libPqths()
libPaths()
install.packages("manipulate")
install.packages("slidify","devtools","qqplot2")
install.packages("devtools")
install.packages("qqplot2")
install.packages(installr)
install.packages("installr"")
install.packages("installr")
updateR()
library(installr)
updateR()
installed.packages()
install.packages("qqplot2")
install.packages("qqplot2")
install.packages("devtools")
install.packages("slidify")
install.packages("ggplot2")
install.packages("slidify")
library(xlsx)
install.packages(httr)
install.packages("httr")
library(httr)
myapp = oauth_app("R Quiz", key = "bcbd7703cd342a40d80a" , secret = "039efcbcf65c0642a65c4c2e246c98223873e006")
sig = sign_oauth1.0(myapp, token = "1b1cbe50738103f83f0ea6f7c25624ecafae3fa3")
sig
homeGL = GET("https://api.github.com/users/jtleek/repos", sig)
homeGL
install.packages("sqldf")
packages <- c("data.table", "sqldf")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
setInternet2(TRUE)
require(httpuv)
require(jsonlite)
install.packages("httpuv")
require(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("R Quiz", "bcbd7703cd342a40d80a", secret = "039efcbcf65c0642a65c4c2e246c98223873e006")
github_token <- oauth2.0_token(oauth_endpoints("github", myapp))
myapp <- oauth_app("R Quiz", "bcbd7703cd342a40d80a", secret = "039efcbcf65c0642a65c4c2e246c98223873e006")
github_token <- oauth2.0_token(oauth_endpoints("github", myapp))
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?download.file
getwd()
ls()
setwd("C:/Users/Christian/Github/datasciencecoursera")
acs <- download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", getwd)
acs <- download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "C:/Users/Christian/Github/datasciencecoursera")
?download.file
acs <- download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "C:/Users/Christian/Github/datasciencecoursera", mode = "wb")
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "C:/Users/Christian/Github/datasciencecoursera", mode = "wb")
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "C:/Users/Christian/Github/datasciencecoursera/acs.csv", mode = "wb")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
nchar(htmlCode[c(10,20,30,100),])
nchar(htmlCode[c(10,20,30,100)]
)
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
?read.fwf
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), widths = c("9,8,8,9"))
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), widths = c("12,7,4,9,4,9,4,9,4"))
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths = c(12,7,4,9,4,9,4,9,4))
x
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths = c(1,7,4,9,4,9,4,9,4))
x
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4,
widths = c(10,7,4,9,4,9,4,9,4))
x
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4,
widths = c(10,7,4,9,4,9,4,9,4))
head(x)
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4,
widths = c(12,7,4,9,4,9,4,9,4))
head(x)
x[4,9]
sum(x[,4])
set.seed(13435)
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10), "var3" = sample(11:15))
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA
X
X[X$var1 <= 3 & X$var3> 11,]
X[X$var1 <= 3 | X$var3> 15,]
X[which(X$var2 > 8)]
X[which(X$var2 > 8),]
sort(X$var1)
sort(X$var1, decreasing = TRUE)
sort(X$var2, na.last = TRUE)
sort(X$var2, na.last = NA)
sort(X$var2)
X[order(X$var1),]
X[order(X$var1,X$var3),]
X[order(X$var2,X$var3),]
X[order(X$var2),]
X[order(X$var1,X$var3),]
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
X$var4 = rnorm(5)
X
Y <- cbind(X,rnorm(5))
Y
Y <- cbind(rnorm(5),X)
Y
Y <- rbind(X,rnorm(5))
Y
Y <- rbind(rnorm(5),X)
Y
source('~/.active-rstudio-document', echo=TRUE)
head(restData)
fileURL <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,"./data/restaurants.csv", method = "curl")
restData <- read.csv("./data/restaurants.csv")
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
head(restData)
head(restData)
tail(restData)
head(restData)
tail(restData)
str(restData))
summary(restData)
head(restData)
tail(restData)
str(restData)
summary(restData)
?table
?tables
tables()
table(restData$name, restData$neighborhood, restData$policeDistrict, restData$Location.1)
table(restData$name)
table(restData$neighborhood)
table(restData$policeDistrict)
table(restData$Location.1)
table(restData$name >=2)
summary(restData)
str(restData)
quantile(restData$councilDistrict, na.rm = TRUE)
quantile(restData$councilDistrict, probs = c(0.1,0.75,0.9))
quantile(restData$councilDistrict, probs = c(0.5,0.75,0.9))
table(restData$zipCode, useNA = "ifany")
quantile(restData$councilDistrict, na.rm = TRUE)
table(restData$councilDistrict, restData$zipCode)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode > 0)
colSums(is.na(restData))
all(colSums(is.na(restData)))
all(colSums(is.na(restData)) == 0)
table(restData$zipCode %in% c("21212"))
restData[restData$zipCode %in% c("21212")]
restData[restData$zipCode %in% c("21212"),]
restData[restData$zipCode %in% c("21212", "21213"),]
head(restData[restData$zipCode %in% c("21212", "21213"),])
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit, data = DF)
xt
warpbreaks$replicate <- rep(1:9, len = 54)
xt <- xtabs(breaks ~ ., data = warpbreaks)
xt
ftable(xt)
fakedata = rnorm(1e5)
object.size(fakedata)
print(object.size(fakedata), units = "Mb")
rm(list=ls())
restData <- read.csv("./data/restaurants.csv")
s1 <- seq(1:10, by=2); s1
s2 <- seq(1:10, length=3); s2
x <- c(1,3,8,25,100); seq(along = x)
s1 <- seq(1,10, by=2); s1
s2 <- seq(1,10, length=3); s2
restData$nearme = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearme)
restData$zipwrong = ifelse(restData$zipCode <0 , TRUE, FALSE)
table(restData$zipwrong)
table(restData$zipwrong, restData$zipCode < 0)
restData$zipGroups = cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipGroups, restData$zipCode)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode, g = 4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf
class(restData$zcf)
restData$zcf[1:10]
class(restData$zcf)
restData$zcf[1:10]
class(restData$zcf)
yesno <- sample(c("yes","no"), size = 10, replace = TRUE)
yesnofac = factor(yesno, levels = c("yes","no"))
relevel(yesnofac, ref ref = "yes")
relevel(yesnofac, ref = "yes")
as.numeric(yesnofac)
library(plyr)
restData2 = mutate(restData, zipGroups = cut2(zipCode, g = 4))
table(restData2$zipGroups)
View(restData2)
library(reshape2)
head(mtcars)
mtcars$carname = rownames(mtcars)
carMelt <- melt(mtcars, id = c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt, n = 3)
tail(carMelt, n = 3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns = split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount = lapply(spIns, sum)
sprCount
unlist(sprCount)
sapply(spIns, sum)
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
ddply(InsectSprays,.(spray),summarize,sum = sum(count))
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
detach(c("plyr","dplyr"))
detach(plyr)
ddply(InsectSprays,.(spray),plyr::summarize,sum = sum(count))
spraySums <- ddply(InsectSprays, .(spray), plyr::summarize, sum=ave(count,FUN=sum))
dim(spraySums)
head(spraySums)
ddply(InsectSprays,.(spray),plyr::summarize,sum = sum(count))
dim(spraySums)
dim(InsectSprays)
rm(list=ls())
library(swirl)
?swirl_options
swirl::install_course()
?swirl:::InstallCourses
swirl::install_course("Getting_and_Cleaning_Data")
swirl()
mydf <- read.csv("path2csv.csv, stringsAsFactors = FALSE")
mydf <- read.csv("path2csv.csv", stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version("dplyr")
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm
("mydf")
rm(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,1(X:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filer(cran, r_ver == "3.3.1", coun == "US")
filter(cran, r_ver == "3.3.1", coun == "US")
filter(cran, r_version == "3.3.1", counnt == "US")
filter(cran, r_version == "3.3.1", country == "US")
filter(cran, r_version == "3.3.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "India")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == US | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filteR(cran, !is.na(r_version))
filter(cran, !is.na(r_version))
